# Telep√≠t√©si script Windows Service-hez
# Futtasd Rendszergazdak√©nt!

param(
    [string]$ServerUrl = "http://localhost:5000/shutdownhub",
    [string]$ServicePath = ""
)

if ([string]::IsNullOrEmpty($ServicePath)) {
    $ServicePath = Join-Path $PSScriptRoot "WindowsService\bin\Release\net8.0\win-x64\publish\RemoteShutdownService.exe"
}

Write-Host "Remote Shutdown Service telep√≠t≈ë" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green

# Ellen≈ërizz√ºk, hogy rendszergazdak√©nt futunk-e
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Error "Ez a script rendszergazdai jogosults√°gokat ig√©nyel!"
    Write-Host "Kattints jobb eg√©rgombbal a PowerShell-re √©s v√°laszd a 'Futtat√°s rendszergazdak√©nt' opci√≥t."
    exit 1
}

try {
    # √âp√≠tj√ºk a projektet
    Write-Host "Projekt √©p√≠t√©se..." -ForegroundColor Yellow
    Set-Location "WindowsService"
    & dotnet restore
    & dotnet build -c Release
    & dotnet publish -c Release -r win-x64 --self-contained
    Set-Location ".."

    # Ellen≈ërizz√ºk hogy l√©tezik-e a service exe
    if (-not (Test-Path $ServicePath)) {
        Write-Error "A service executable nem tal√°lhat√≥: $ServicePath"
        exit 1
    }

    # Friss√≠tj√ºk a szerver URL-t a konfigur√°ci√≥ban
    Write-Host "Szerver URL be√°ll√≠t√°sa: $ServerUrl" -ForegroundColor Yellow
    $configFile = "WindowsService\Worker.cs"
    if (Test-Path $configFile) {
        $content = Get-Content $configFile -Raw
        $content = $content -replace 'https://your-signalr-hub\.azurewebsites\.net/shutdownhub', $ServerUrl
        Set-Content $configFile -Value $content
        
        # √öjra√©p√≠tj√ºk a friss√≠tett konfigur√°ci√≥val
        Set-Location "WindowsService"
        & dotnet build -c Release
        & dotnet publish -c Release -r win-x64 --self-contained
        Set-Location ".."
    }

    # Le√°ll√≠tjuk a service-t ha m√°r fut
    $existingService = Get-Service -Name "RemoteShutdownService" -ErrorAction SilentlyContinue
    if ($existingService) {
        Write-Host "Megl√©v≈ë service le√°ll√≠t√°sa..." -ForegroundColor Yellow
        Stop-Service -Name "RemoteShutdownService" -Force
        & sc.exe delete RemoteShutdownService
        Start-Sleep -Seconds 2
    }

    # Telep√≠tj√ºk a service-t
    Write-Host "Windows Service telep√≠t√©se..." -ForegroundColor Yellow
    & sc.exe create RemoteShutdownService binPath= $ServicePath
    if ($LASTEXITCODE -ne 0) {
        throw "Hiba a service l√©trehoz√°sakor"
    }

    # Be√°ll√≠tjuk automatikus ind√≠t√°sra
    & sc.exe config RemoteShutdownService start= auto
    if ($LASTEXITCODE -ne 0) {
        throw "Hiba az automatikus ind√≠t√°s be√°ll√≠t√°sakor"
    }

    # Elind√≠tjuk a service-t
    Write-Host "Service ind√≠t√°sa..." -ForegroundColor Yellow
    & sc.exe start RemoteShutdownService
    if ($LASTEXITCODE -ne 0) {
        throw "Hiba a service ind√≠t√°sakor"
    }

    Write-Host ""
    Write-Host "‚úÖ RemoteShutdownService sikeresen telep√≠tve √©s elind√≠tva!" -ForegroundColor Green
    Write-Host "üì± Most telep√≠tsd a mobil alkalmaz√°st √©s √°ll√≠tsd be a szerver URL-t." -ForegroundColor Cyan
    Write-Host ""
    Write-Host "Service √°llapot ellen≈ërz√©se:" -ForegroundColor Yellow
    & sc.exe query RemoteShutdownService

} catch {
    Write-Error "Hiba t√∂rt√©nt a telep√≠t√©s sor√°n: $($_.Exception.Message)"
    exit 1
}
